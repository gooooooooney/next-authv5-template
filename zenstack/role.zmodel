import "./user"

model Role {
  id String @id @default(cuid())
  name String @default("user")
  userRole UserRole @default(user)
  superAdmin Boolean? @default(false)
  users User[]
  menus Menu[]
  delete Boolean @default(false)
  // createdBy User @relation(fields: [createdById], references: [id])
  // createdById String
  // updatedBy User @relation(fields: [updatedById], references: [id])
  // updatedById String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum UserRole {
  user
  admin
}
enum MenuStatus {
  active
  inactive
}

enum MenuType {
  menu
  button
  dir
}

model Menu {
  id String @id @default(cuid())
  label String
  path String
  role Role @relation(fields: [roleId], references: [id], onDelete: Cascade)
  roleId String
  type MenuType @default(menu)
  status MenuStatus @default(active)
  icon String?
  parent Menu? @relation("ParentChildrens",  fields: [parentId], references: [id], onDelete: Cascade)
  parentId String?
  children Menu[] @relation("ParentChildrens")
  createBy String
  updateBy String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model SuperAdmin {
  id String @id @default(uuid())
  initialized Boolean? @default(false)
  allowSignUp Boolean? @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
  instanceId String? @default("00000000-0000-0000-0000-000000000000")
}